# Name your workflow
name: Deploying to K8s 

# How GitHub Acions will trigger the workfolw
on:
  push:
    branches:
      - main
  pull_request:
      branches:
        - main

env:
  AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME}}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN}}

jobs:
  deploy:
    name: Build machine
    runs-on: ubuntu-latest
    steps:

      - # Checkout branches
        name: Checkout
        uses: actions/checkout@v3

      - # login to Docker Hub using the secrets provided
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}
        
      - # create a buildkit builder instance
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - # build the container image and push it to Docker Hub with the name clockbox.
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/clockbox:latest

      - # Configure AWS Credentials
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET }}
          aws-region: us-west-1


      - name: Deploy to EKS
        uses: m1g0r/aws/kubectl@master
        with:
          args: apply -f ./k8s_deployment
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG}}


      - name: Get deployments status
        uses: m1g0r/aws/kubectl@master
        with:
          args: rollout status deployment/nodeapp-deployment -n defaults
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG}}
